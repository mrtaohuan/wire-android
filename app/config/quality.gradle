/**
 * Wire
 * Copyright (C) 2018 Wire Swiss GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
apply plugin: 'checkstyle'
apply plugin: 'pmd'

task checkstyle(type: Checkstyle) {
    source "${project.rootDir}"
    configFile file("${project.rootDir}/app/config/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("${project.rootDir}/app/config/checkstyle/suppressions.xml").absolutePath
    classpath = files()
}

checkstyle {
    toolVersion = '6.18'
    ignoreFailures = true
}

dependencies {
    checkstyle project(':custom-checkstyle')
}

pmd {
    toolVersion = '5.4.1'
    ruleSetFiles = files("${project.rootDir}/app/config/pmd-config.xml")
    ignoreFailures = true
    ruleSets = []

}

task pmd(type: Pmd) {
    source "${project.rootDir}"

    include '**/*.java'

    // No generated sources
    exclude '**/R.java'
    exclude '**/generated/**'
    exclude '**/gen/**'

    // Just care about the direct app source
    exclude '**/annotations-processor/**'
    exclude '**/lintlib/**'
    exclude '**/lintrules/**'
    exclude '**/androidTest/**'

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

android {
    lintOptions {
        // set to true to turn off analysis progress reporting by lint
        quiet false
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings false
        // if true, emit full/absolute paths to files with errors
        absolutePaths true
        // if true, check all issues, including those that are off by default
        checkAllWarnings true
        // if true, treat all warnings as errors
        warningsAsErrors true
        // if true, don't include source code lines in the error output
        noLines false
        // if true, show all locations for an error, do not truncate lists, etc.
        showAll true
        // if true, generate a text report of issues
        textReport false
        // location to write the output; can be a file or 'stdout'
        textOutput 'stdout'
        // if true, generate an XML report for use by for example Jenkins
        xmlReport true
        // if true, generate an HTML report (with issue explanations, sourcecode, etc)
        htmlReport true
        // set to true to have all release builds run lint on issues with severity=fatal
        // and abort the build (controlled by abortOnError above) if fatal issues are found
        checkReleaseBuilds false


        if (project.plugins.hasPlugin('com.android.application')) {
            lintConfig file("${project.rootDir}/app/config/lint-config-with-unused.xml")
        } else {
            lintConfig file("${project.rootDir}/app/config/lint-config.xml")
        }
    }
}
